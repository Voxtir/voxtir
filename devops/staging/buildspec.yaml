version: 0.2
phases:
  install:
    #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
    #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
    runtime-versions:
      nodejs: 18
  pre_build:
    on-failure: ABORT
    commands:
      - echo Installing source NPM dependencies...
      - echo Branch name - $CODEBUILD_SOURCE_VERSION
      - echo Branch name - $CODEBUILD_WEBHOOK_BASE_REF
      - echo Branch name - $CODEBUILD_WEBHOOK_HEAD_REF
      - echo Branch name - $CODEBUILD_WEBHOOK_TRIGGER
      - echo Altered files - "$(git diff --name-only $CODEBUILD_RESOLVED_SOURCE_VERSION $CODEBUILD_WEBHOOK_PREV_COMMIT)"
      - cd frontend
      - npm install

      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ${aws_region} | docker login --username AWS --password-stdin ${ecr_repository_base}
  build:
    on-failure: ABORT
    commands:
      - echo Build started on 'date'

      - echo Building frontend
      - npm run build
      # Build docker image if altered
      - echo Done building frontend

      - echo Building docker image
      - cd .. && cd whisper-server
      - docker build -t ${ecr_repository_uri}:${whisper_image_tag} .
      - docker push ${ecr_repository_uri}:${whisper_image_tag}
      - cd .. && cd frontend
      - echo done building docker image

      - |
        if [ "$(git diff --name-only $CODEBUILD_RESOLVED_SOURCE_VERSION $CODEBUILD_WEBHOOK_PREV_COMMIT | grep -e "whisper-server")" != "" ]; then
          #your code;
          echo "Building docker image"
        fi
  post_build:
    on-failure: ABORT
    commands:
      - |
        if [ "$CODEBUILD_WEBHOOK_TRIGGER" = "branch/main" ]; then
          aws s3 cp --recursive --acl public-read ./dist s3://${aws_s3_bucket}/
          aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./dist/index.html s3://${aws_s3_bucket}/
        else
          echo "Skipping S3 copy since branch is not main."
        fi
      - echo Build completed on 'date'
