mutation CreateProject($name: String!, $description: String!) {
  createProject(name: $name, description: $description) {
    message
    success
  }
}

mutation DeleteProject($id: ID!) {
  deleteProject(id: $id) {
    message
    success
  }
}

mutation UpdateProject($id: ID!, $name: String, $description: String) {
  updateProject(id: $id, name: $name, description: $description) {
    message
    success
  }
}

mutation CreateDocument(
  $projectId: ID!
  $title: String!
  $transcriptionType: TranscriptionType!
  $language: String
  $speakerCount: Int
  $mimeType: String!
) {
  createDocument(
    projectId: $projectId
    title: $title
    transcriptionType: $transcriptionType
    language: $language
    speakerCount: $speakerCount
    mimeType: $mimeType
  ) {
    expiresAtUnixSeconds
    url
  }
}

mutation shareProject($shareProjectId: ID!, $userEmail: String!, $role: Role!) {
  shareProject(id: $shareProjectId, userEmail: $userEmail, role: $role) {
    message
    success
  }
}

mutation unShareProject($unshareProjectId: ID!, $userEmail: String!) {
  unshareProject(id: $unshareProjectId, userEmail: $userEmail) {
    message
    success
  }
}

mutation pinProject($projectId: ID!, $pin: Boolean!) {
  pinnedProject(projectId: $projectId, pin: $pin) {
    message
    success
  }
}

mutation GeneratePresignedUrlForAudio($documentId: ID!) {
  getPresignedUrlForAudioFile(documentId: $documentId) {
    expiresAtUnixSeconds
    url
  }
}
mutation trashDocument($documentId: ID!, $projectId: ID!) {
  trashDocument(documentId: $documentId, projectId: $projectId) {
    message
    success
  }
}

mutation UpdateDocument($documentId: ID!, $title: String!) {
  updateDocument(documentId: $documentId, title: $title) {
    message
    success
  }
}

mutation AcceptProject($token: String!) {
  acceptProjectInvitation(token: $token) {
    message
    success
  }
}
