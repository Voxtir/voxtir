"""
The `Upload` scalar type represents a file upload.
"""
scalar Upload

type StatusResponse {
  message: String!
}

input DocumentUploadInput {
  docType: String!
  file: Upload!
}

type SuccessResult {
  success: Boolean!
  message: String
}

interface IUser {
  id: ID!
  name: String!
  email: String!
}

type User implements IUser {
  id: ID!
  name: String!
  email: String!
}

type UserSharing implements IUser {
  id: ID!
  name: String!
  email: String!
  role: Role!
}

enum Role {
  ADMIN
  MEMBER
}

type Query {
  status: StatusResponse
  me: User
  projects: [Project]
  project(id: ID!): Project
}

type Mutation {
  uploadAudioFile(doc: DocumentUploadInput!, documentId: ID!): SuccessResult
  uploadDocuments(docs: [DocumentUploadInput!]!): SuccessResult

  """
  Projects
  """
  createProject(name: String!, description: String!): Project!
  deleteProject(id: ID!): Boolean!
  shareProject(id: ID!, userEmail: String!, role: Role!): Project!
  unshareProject(id: ID!, userEmail: String!): Project!

  """
  Documents
  """
  createDocument(
    documentId: ID!
    title: String!
    description: String
    language: String!
    transcriptionType: TranscriptionType
  ): Document!
  updateDocument(documentId: ID!, title: String, description: String): Project!
  deleteDocument(documentId: ID!): Boolean!
  shareDocument(documentId: ID!, userEmail: String!, role: Role!): Boolean!
  unshareDocument(documentId: ID!, userEmail: String!): Boolean!
  trashDocument(documentId: ID!): Boolean!
}

type Project {
  id: ID!
  name: String!
  description: String!
  sharedWith: [UserSharing]!
  documents: [Document]
}

enum TranscriptionStatus {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}

enum TranscriptionType {
  AUTOMATIC
  MANUAL
}

type Document {
  id: ID!
  title: String!
  project: Project!
  sharedWith: [UserSharing]!
  isTrashed: Boolean!
  lastModified: String!
  description: String
  transcriptionMetadata: TranscriptionMetadata
  transcriptionStatus: TranscriptionStatus!
  transcriptionType: TranscriptionType!
}

type TranscriptionMetadata {
  speakersCount: Int
  dialects: [String]
  language: String!
}
