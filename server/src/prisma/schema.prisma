generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum TranscriptionType {
    AUTOMATIC
    MANUAL
}

model Document {
    id                String            @id @default(uuid())
    title             String
    data              Bytes
    createdAt         DateTime          @default(now())
    updatedAt         DateTime          @updatedAt
    audioFileUrl      String
    project           Project           @relation(fields: [projectId], references: [id])
    projectId         String // relation scalar field (used in the `@relation` attribute above)  
    // Transcription data
    language          String?
    speakerCount      Int?
    dialect           String?
    transcriptionType TranscriptionType

    // Automatic transcription data
    transcriptionStatus         TranscriptionProcessStatus?
    doSpeakerDiarization        Boolean?
    rawAudioFileURL             String?
    transcriptionAudioFileURL   String?
    speakerDiarizationFileURL   String?
    whisperTranscriptionFileURL String?

    // Other
    isTrashed Boolean @default(false)

    @@index([projectId])
}

enum TranscriptionProcessStatus {
    CREATED
    QUEUED
    PROCESSING
    FAILED
    DONE
}

model User {
    id                            String          @id
    auth0ManagementApiUserDetails Json?
    UsersOnProjects               UserOnProject[]
}

model Project {
    id              String          @id @default(uuid())
    name            String
    description     String?
    createdAt       DateTime        @default(now())
    updatedAt       DateTime        @updatedAt
    UsersOnProjects UserOnProject[]
    Documents       Document[]
}

model UserOnProject {
    id        String      @id @default(uuid())
    project   Project     @relation(fields: [projectId], references: [id])
    projectId String // relation scalar field (used in the `@relation` attribute above)
    user      User        @relation(fields: [userId], references: [id])
    userId    String // relation scalar field (used in the `@relation` attribute above)
    role      ProjectRole
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt

    @@index([projectId, userId])
}

enum ProjectRole {
    ADMIN
    USER
}
